// Before implementing any, this will be an int stack

struct Node {
	int value,
	^Node prev,
}

struct Stack {
	^Node tail,
	int length,
}

fun push(^Stack s, int value) {
	let ^Node n = `new Node(value, nil);

	++s->length;

	if (s->length == 1) {
		s->tail = n;
		return;
	}

	n->prev = s->tail;
	s->tail = n;
}

fun pop(^Stack s) int {
	if (s->length == 0) {
		return 0;
	}

	--s->length;

	if (s->length == 0) {
		let ^Node tail = s->tail;
		s->tail = nil;
		return tail->value;
	}

	let ^Node tail = s->tail;
	s->tail = s->tail->prev;
	return tail->value;
}

fun peek(^Stack s) int {
	// Length == 0
	if (s->tail == nil) {
		return 0;
	}

	return s->tail->value;
}
