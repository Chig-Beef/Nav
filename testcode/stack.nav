struct Node {
	any value,
	^Node prev,
}

struct Stack {
	^Node tail,
	int length,
}

fun push(^Stack s, any value) {
	let ^Node n = `new Node(value, nil);

	++s.length;

	if (s.length == 1) {
		s.tail = n;
		return;
	}

	n.prev = s.tail;
	s.tail = n;
}

fun pop(^Stack s) any {
	if (s.length == 0) {
		return nil;
	}

	--s.length;

	if (s.length == 0) {
		let ^Node tail = s.tail;
		s.tail = nil;
		return tail.value;
	}

	let ^Node tail = s.tail;
	s.tail = s.tail.prev;
	return tail.value;
}

fun peek(^Stack s) any {
	// Length == 0
	if (s.tail == nil) {
		return nil;
	}

	return s.tail.value;
}
